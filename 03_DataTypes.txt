* Basic Types 
* Arrays Types
* var and object 
* Nullable Types
* Loops And List Operations
* List Arrow Function
* Parse and convert Types
* Enums
- Tupples
------------------------------
OOP - Object Oriented Programming
 C# /Java/C++/Python/JS

 Class Vs Object
 ----------------
 - Class:
   - Template
   - Methods(non static) - Logic
   - Properties - Data
 -----  
 - Objects/Instanse
   - Type Of Class
   - new 
     Class c1 = new Class();
     c1.Dosomthing();
   - each instanse is seperated memory/data
     -----------------------------------------------
  Class
    * Fields
      - private members data
       example: 
       private int age; 
    * Properties
      - full property: wrapper for private member
      - auto property: int MyProp {get; set;}
    * Constractor
    - Methods
    * WPF(LAYOUTS)
-----------------------------------------------------
Full Property:
 - Wrapper for private members
 - specially for set

         public int X
        {
            get
            {
                return x;
            }
            set
            {
                if (value >= 0)
                    x = value;
                else
                    x = 0;
            }
        }

----------

Private / Public:
 - private is not accesed outside the class
 - public can be accessed outside the class
 - member method can always access any inner private member

 x is private member
  public string GetInfo()
        {
            //member method can always access any inner private member
            //x is private and still can be accessed
            //why: in the same class
            int val = x;
            return $"{val},{Y},{Z}";
        }









   
 
------------------------------



