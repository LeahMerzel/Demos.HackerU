Internal vs public:
 - Internal - Access only in the scope of the project
 - public - from evrywhere also external project


Interface :

 - Abstract Class that all its properties and methods are also abstract
 - pure abstract
 - Only Signitures
 - No Constractors
 - No Fields
 - No Implemetation
 - Declared without permmision (most of the time public)
 - Child class Must Implement all signitures
 - Class Can Implement Many Interfaces But Derived only 1 Class
 -----------------------------------------------

Example:

interface IAnimal 
{
  void animalSound(); // interface method (does not have a body)
}
interface ILog 
{
  void Log();
}

class Dog : Animal IAnimal,ILog
{

  public void animalSound()
  {
    Console.Writline("HAV HAV...");
  }

   public void Log()
  {
    Console.Writline("Logging...");
  }
}



